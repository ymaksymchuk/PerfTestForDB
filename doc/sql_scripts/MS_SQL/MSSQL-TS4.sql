DECLARE 
	@CASE_FILE_ID NUMERIC(10) = 1073989,		
	@CASE_TYPE_ID NUMERIC(10),
	@CASE_TYPE_NAME NVARCHAR(MAX) = N'Foreclosure',
	@CASE_TYPE_CODE NVARCHAR(MAX),
	@LOCATION_NAME NVARCHAR(MAX) = N'Boca',
	@LOCATION_ID NUMERIC(10),
	@MSG NVARCHAR(MAX) = NULL,
	@BK_CHAPTER_NUM NVARCHAR(MAX) = NULL,
	@BK_CHAPTER_ID NUMERIC(10),
	@CASE_TMPL_ID NUMERIC(10) = 2313,--2771,
	@CASE_FILE_RECEIVED NVARCHAR(MAX) = N'02/18/2020',
	@CASE_STARTED NVARCHAR(MAX) = N'02/18/2020',
	@CASE_WHO_HAS NVARCHAR(MAX) = N'Andriy Ruslyakov',
	@CASE_NUMBER NVARCHAR(MAX) ='FC02',
	@CASE_ID NUMERIC(10),-- = 1434057,
	@USERID NVARCHAR(MAX) = N'6951',
	@USERNAME NVARCHAR(MAX) = N'Andriy Ruslyakov',
	@BK_ID NUMERIC(10),
	@QUOTE_ID NUMERIC(10),
	@HISTORY_IDS NVARCHAR(MAX),
	@DEFICIENCY_REASON_ID NUMERIC(10),
	@DEFICIENCY_REASON_NAME NVARCHAR(MAX) = NULL,
	@APPEARANCE_TYPE_ID NUMERIC(10),
	@APPEARANCE_TYPE_NAME NVARCHAR(MAX) = NULL,
	@CONSENT_TYPE_ID NUMERIC(10),
	@CONSENT_TYPE_NAME NVARCHAR(MAX) = NULL,
	@D_OCCUPANCY NVARCHAR(MAX) =0,
	@D_NOTICE_SENT_STAT NVARCHAR(MAX) = 0,
	@CONTACT_REF NVARCHAR(MAX) = 'Trump Inc',
	@CONTACT_ID NUMERIC(10) = 4276114,-- 5712984,
	@TEMP_CONTACT_ID numeric(10),
	@ACTOR_INACTIVE NVARCHAR(MAX)=0,
	@NEW_ACTOR_ID numeric(10),
	@NEW_CONTACT_ID numeric(10),
	@ACTOR_ID numeric(10),
	@D_DEFICIENCY_PRESERVED NVARCHAR(MAX) = NULL,
	@D_DEFICIENCY_SOUGHT NVARCHAR(MAX) = NULL,
	@D_SERVICE_CODE NVARCHAR(MAX) = NULL,
	@D_APPEAR_DATE NVARCHAR(MAX) = NULL,
	@D_CONSENT_REQUESTED NVARCHAR(MAX) = NULL, 
	@D_CONSENT_RECEIVED NVARCHAR(MAX) = NULL, 
	@D_DEFAULT_NOTICE_SENT NVARCHAR(MAX) = NULL, 
	@D_DEFAULT_EXPIRED NVARCHAR(MAX) =NULL,
	@D_DEFAULT_ORDERED NVARCHAR(MAX) = NULL, 
	@D_ORDER_SENT NVARCHAR(MAX) = NULL, 
	@D_COURT_FILE_CHECK NVARCHAR(MAX) = NULL,
	@D_DEFAULT_ORD_ENT NVARCHAR(MAX) =NULL,
	@D_DUE_DILIGENCE_AFF_NEEDED NVARCHAR(MAX)=NULL,
	@D_DUE_DILIGENCE_AFF_RECEIVED NVARCHAR(MAX)=NULL,
	@D_DUE_DILIGENCE_AFF_FILED NVARCHAR(MAX)=NULL,
	@D_SEQ_NUMB NVARCHAR(MAX)=1,
	@D_PLEADING_DATE NVARCHAR(MAX)=NULL,
	@PRIOR_ACTOR_ID numeric(10),
	@NEW_ADDRESS_ID numeric(10),
	@STATE_ID NUMERIC(10), 
	@COUNTY_NAME NVARCHAR(MAX) = N'Washington', 
	@COUNTY_ID NUMERIC(10),
	@STATE_CODE NVARCHAR(20) = N'FL',
	@CNTR_ID numeric(10),
	@COUNTRY_NAME NVARCHAR(MAX) = N'United States',
	@ADDRESS_1_LINE NVARCHAR(MAX) = N'Main street 1', 
	@ADDRESS_2_LINE NVARCHAR(MAX),
	@ADDRESS_TEXT NVARCHAR(MAX),
	@ADDRESS_LINE_ATTN NVARCHAR(MAX),
	@ADDRESS_CITY NVARCHAR(MAX) = N'Schdy', 
	@ADDRESS_ZIPCODE NVARCHAR(MAX) = N'12345',
	@ADDRESS_IS_PRIM NVARCHAR(MAX) = 0,
	@ADDRESS_ID numeric(10),
	@CONT_TYPE_ID NUMERIC(10),
	@CONT_TYPE_CASE_FILE NVARCHAR(MAX),
	@COMP_FIELD_SNGL NVARCHAR(MAX),
	@CONT_TYPE_NAME NVARCHAR(MAX) = N'Title Company'

-- set initial param values
SELECT top 1 @CASE_FILE_ID = CASE_FILE_ID  FROM dbo.CMS_case_file --where case_file_id = 1073989
order by rand(CHECKSUM(NEWID()));
print('@CASE_FILE_ID = ' + cast(@CASE_FILE_ID as varchar(20)))

select top 1 @CASE_TYPE_NAME = CASE_TYPE_NAME from dbo.CMS_CASE_TYPE
order by rand(CHECKSUM(NEWID()));
print ('@CASE_TYPE_NAME = ' + @CASE_TYPE_NAME)

-- CMSWFWS_SP_CREATE_CASE_ACTION
SELECT @CASE_TYPE_ID=CASE_TYPE_ID,
		@CASE_TYPE_CODE=CASE_TYPE_CODE 
	FROM dbo.CMS_CASE_TYPE (NOLOCK) WHERE CASE_TYPE_NAME=@CASE_TYPE_NAME

SELECT top 1 @CASE_TMPL_ID = [CASE_TMPL_ID] FROM[dbo].[CMS_CASE_TEMPLATE] 
where CASE_TYPE_ID = @CASE_TYPE_ID
  order by rand(CHECKSUM(NEWID()))
print('@CASE_TMPL_ID = ' + cast(@CASE_TMPL_ID as varchar(20)))

		SELECT @CASE_NUMBER = CAST(COUNT(1)+1 AS VARCHAR(3)) FROM dbo.CMS_CASE_FILE CF (NOLOCK)
		JOIN dbo.CMS_CASE C (NOLOCK) ON CF.CASE_FILE_ID=C.CASE_FILE_ID
		WHERE CF.CASE_FILE_ID=@CASE_FILE_ID AND C.CASE_TYPE_ID=@CASE_TYPE_ID
		-- pad left 0 for # under 10 (eg 01, 02)
		IF LEN(@CASE_NUMBER) = 1
			SET @CASE_NUMBER = '0'+@CASE_NUMBER
		-- and prefix with the type (eg fc, bk)
		SET @CASE_NUMBER = @CASE_TYPE_CODE+@CASE_NUMBER

	print ('@CASE_NUMBER = ' + @CASE_NUMBER)

		-- CREATE THE ACTION AND GET ITS ID FOR OTHER INSERTS/AUDIT
		INSERT INTO CMS_CASE
		(
			CASE_FILE_ID,
			CASE_TYPE_ID,
			LOCATION_ID,
			BK_CHAPTER_ID,
			CASE_TMPL_ID,
			CASE_FILE_RECEIVED,
			CASE_STARTED,
			CASE_WHO_HAS,
			CASE_NUMBER
			--CORE_PROCESS_NAME
		)
		VALUES
		(
			@CASE_FILE_ID,
			@CASE_TYPE_ID,
			@LOCATION_ID,
			@BK_CHAPTER_ID,
			ISNULL(@CASE_TMPL_ID, 42),
			@CASE_FILE_RECEIVED,
			@CASE_STARTED,
			@CASE_WHO_HAS,
			@CASE_NUMBER
			--@CORE_PROCESS_NAME
		)

		SET @CASE_ID = SCOPE_IDENTITY()

		print 'CASE inserted: ' + cast(@CASE_ID as varchar(20))

		-- CREATE THE CASE STATUS ROW (NOT AUDITED) - TRIGGER HANDLES SETTING CASE_STAT_CUR_STAT ETC
		INSERT INTO dbo.CMS_CASE_STATUS (STATUS_ID, CASE_ID, CASE_STAT_USR_ID, CASE_STAT_USR_NAME)
		VALUES (1, @CASE_ID, @USERID, @USERNAME)

		print 'CASE STATUS inserted: ' + cast(@CASE_ID as varchar(20))

		-- CREATE THE BK ROW AND AUDIT THAT
		INSERT INTO dbo.CMS_BANKRUPTCY (CASE_ID) VALUES (@CASE_ID)
		SET @BK_ID = SCOPE_IDENTITY()

		print 'BANKRUPTCY inserted: ' + cast(@BK_ID as varchar(20))

		-- CREATE EMPTY TAGGED REFERRAL QUOTE AND AUDIT THAT
		-- complex type 312 = referral quote
		INSERT INTO dbo.CMS_QUOTE (CASE_ID, QUOTE_TYPE_ID, QUOTE_IS_TAGGED) VALUES (@CASE_ID, 8, 1)
		SET @QUOTE_ID = SCOPE_IDENTITY()

		print 'QUOTE inserted: ' + cast(@QUOTE_ID as varchar(20))
		-- CALL CMS SP TO MAKE MILESTONES
		--EXEC dbo.CMS_P_CREATE_ACTIVITY_BY_TEMPLATE @CASE_ID, @USERID, @USERNAME, @HISTORY_IDS OUT

    DECLARE @cmpl_date datetime
    DECLARE @act_schdl_date datetime
    DECLARE @act_id NUMBERID

    SELECT @case_file_received = c.CASE_FILE_RECEIVED,
        @case_tmpl_id = c.CASE_TMPL_ID
    FROM dbo.CMS_CASE c (NOLOCK)
    WHERE c.CASE_ID = @case_id

    /* Insert all Activities    */
    INSERT INTO dbo.CMS_ACTIVITY (
		CASE_ID,
		ACT_NAME,
		ACT_ACTIV_ID,
		ACT_SEQ,
		ACT_TMPL_ID,
		USER_GROUP_ID
	)
    SELECT 	@case_id,
			a.BF_ACTIVITY_NAME,
            a.BF_ACT_ID,
			a.ACT_TMPL_SEQ_NUM,
			a.ACT_TMPL_ID,
			mtn.USER_GROUP_ID
    FROM dbo.CMS_ACTIVITY_TEMPLATE a (NOLOCK)
		JOIN dbo.CMS_MS_TEMPLATE_NEW (NOLOCK) mtn ON a.MS_ID = mtn.MS_ID
    WHERE a.CASE_TMPL_ID = @case_tmpl_id --a.BF_PROC_DEF_ID = @proc_def_id
    ORDER BY a.ACT_TMPL_SEQ_NUM asc

	print 'ACTIVITY inserted: ' + cast(@case_id as varchar(20))

    SET @cmpl_date = getutcdate()

    /* Schedule first activity */
             SELECT @act_schdl_date = dbo.CMS_F_GET_DATE_ONLY(ISNULL(@case_file_received,getutcdate())),
            @act_id = ACT_ID FROM dbo.CMS_ACTIVITY (NOLOCK) WHERE CASE_ID = @case_id AND ACT_ACTIV_ID = '000'

            --insert new comment on recalculating scheduled date in milestone (bug AP300001958)
    --EXEC CMS_P_COMMENT_INSERT 6,@case_id,null,@USERID,@USERNAME,@act_schdl_date,'000',@act_id,'SCH - ',1,1
	    INSERT INTO dbo.CMS_COMMENT(CMNT_TYPE_ID,CASE_ID,COMMENT_TEXT,COMMENT_USR_ID,COMMENT_USR_NAME,COMMENT_DATE)
      VALUES(6,@CASE_ID,'Comment',@USERID,@USERNAME,GETUTCDATE())

    UPDATE dbo.CMS_ACTIVITY
    SET ACT_SCHDL_DATE = @act_schdl_date
    WHERE CASE_ID = @case_id
    AND ACT_ACTIV_ID = '000'

-- CMSWS_SP_INSERT_DEFENDANT_NEW
		SELECT @DEFICIENCY_REASON_ID = DEFICIENCY_REASON_ID FROM dbo.CMS_DEFENDANT_DEFICIENCY_REASON (NOLOCK)
			WHERE DEFICIENCY_REASON_NAME=@DEFICIENCY_REASON_NAME

		SELECT @APPEARANCE_TYPE_ID = APPEARANCE_TYPE_ID FROM dbo.CMS_DEFENDANT_APPEARANCE_TYPE (NOLOCK)
			WHERE APPEARANCE_TYPE_NAME=@APPEARANCE_TYPE_NAME

		SELECT @CONSENT_TYPE_ID = CONSENT_TYPE_ID FROM dbo.CMS_DEFENDANT_CONSENT_TYPE (NOLOCK)
			WHERE CONSENT_TYPE_NAME=@CONSENT_TYPE_NAME

		SET @TEMP_CONTACT_ID = @CONTACT_ID
		--print 'contact_id = ' + cast(@CONTACT_ID as varchar(20))

---- CMSWS_SP_INSERT_CASE_CONTACT_ACTOR
	SET @NEW_ACTOR_ID = 0

--		-- WE NEED THESE FOR INSERT/CHECKS
		SELECT @CONT_TYPE_ID = CT.CONT_TYPE_ID,
				@CONT_TYPE_CASE_FILE=CT.CONT_TYPE_CASE_FILE,
				@COMP_FIELD_SNGL = CMPLX.COMP_FIELD_SNGL
			FROM dbo.CMS_CONTACT_TYPE CT (NOLOCK)
				LEFT OUTER JOIN dbo.CMS_COMPLEX_FIELD CMPLX (NOLOCK) ON CT.CONT_TYPE_ID=CMPLX.CONT_TYPE_ID
			WHERE CONT_TYPE_NAME=@CONT_TYPE_NAME

 		-- ACTOR DOES NOT GET CASE ID ENTERED FOR CASE FILE LEVEL CONTACTS
		DECLARE @CASE_ID_VAR NUMERIC (10,0)  -- NULL DEFAULT
		IF @CONT_TYPE_CASE_FILE=0
		BEGIN
			SET @CASE_ID_VAR = @CASE_ID
		END

		IF EXISTS (SELECT 1 FROM [dbo].[CMS_ACTOR] (NOLOCK) WHERE [CASE_ID] = @CASE_ID AND [CONTACT_ID] = @CONTACT_ID
			AND [CASE_FILE_ID] = @CASE_FILE_ID)
			BEGIN
				 delete from [dbo].[CMS_ACTOR]  WHERE [CASE_ID] = @CASE_ID AND [CONTACT_ID] = @CONTACT_ID
				AND [CASE_FILE_ID] = @CASE_FILE_ID
			END

		INSERT INTO dbo.CMS_ACTOR
		(
			CASE_FILE_ID,
			CONT_TYPE_ID,
			CASE_ID,
			CONTACT_ID,
			ACTOR_INACTIVE
		)
		VALUES
		(
			@CASE_FILE_ID,
			@CONT_TYPE_ID,
			@CASE_ID_VAR,  -- CASE_ID OR NULL AS APPROPRIATE SEE ABOVE
			@CONTACT_ID,
			@ACTOR_INACTIVE
		)

		SET @ACTOR_ID = SCOPE_IDENTITY()

		print 'ACTOR inserted: id = ' + cast(@ACTOR_ID as varchar(20))

		SET @NEW_CONTACT_ID=@CONTACT_ID

		-- now we have to create the specialized defendant fields with the newly created actor
		SELECT @ACTOR_ID=ACTOR_ID FROM CMS_ACTOR (NOLOCK) WHERE CASE_ID=@CASE_ID AND CONTACT_ID=@CONTACT_ID
		--AND CONT_TYPE_ID=57
		SET @NEW_ACTOR_ID=@ACTOR_ID


		INSERT INTO dbo.CMS_DEFENDANT
		(
			ACTOR_ID,
			D_OCCUPANCY,
			D_DEFICIENCY_PRESERVED,
			D_DEFICIENCY_SOUGHT,
			DEFICIENCY_REASON_ID,
			D_SERVICE_CODE,
			D_APPEAR_DATE,
			APPEARANCE_TYPE_ID,
			D_CONSENT_REQUESTED,
			D_CONSENT_RECEIVED,
			CONSENT_TYPE_ID,
			D_NOTICE_SENT_STAT,
			D_DEFAULT_NOTICE_SENT,
			D_DEFAULT_EXPIRED,
			D_DEFAULT_ORDERED,
			D_ORDER_SENT,
			D_COURT_FILE_CHECK,
			D_DEFAULT_ORD_ENT,
			D_DUE_DILIGENCE_AFF_NEEDED,
			D_DUE_DILIGENCE_AFF_RECEIVED,
			D_DUE_DILIGENCE_AFF_FILED,
			D_PLEADING_DATE,
			DEF_SEQ_NUMB
		)
		VALUES
		(
			@ACTOR_ID,
			@D_OCCUPANCY,
			@D_DEFICIENCY_PRESERVED,
			@D_DEFICIENCY_SOUGHT,
			@DEFICIENCY_REASON_ID,
			@D_SERVICE_CODE,
			@D_APPEAR_DATE,
			@APPEARANCE_TYPE_ID,
			@D_CONSENT_REQUESTED,
			@D_CONSENT_RECEIVED,
			@CONSENT_TYPE_ID,
			@D_NOTICE_SENT_STAT,
			@D_DEFAULT_NOTICE_SENT,
			@D_DEFAULT_EXPIRED,
			@D_DEFAULT_ORDERED,
			@D_ORDER_SENT,
			@D_COURT_FILE_CHECK,
			@D_DEFAULT_ORD_ENT,
			@D_DUE_DILIGENCE_AFF_NEEDED,
			@D_DUE_DILIGENCE_AFF_RECEIVED,
			@D_DUE_DILIGENCE_AFF_FILED,
			@D_PLEADING_DATE,
			@D_SEQ_NUMB
		)

		print 'DEFENDANT inserted: case_id = ' + cast(@CASE_ID as varchar(20))

---- CMSWS_SP_INSERT_CASE_CONTACT_ADDRESS
SET @NEW_ADDRESS_ID = 0
		SELECT @STATE_ID = STATE_ID FROM dbo.CMS_STATE (NOLOCK)
			WHERE STATE_CODE=@STATE_CODE

		SELECT @COUNTY_ID = COUNTY_ID FROM dbo.CMS_COUNTY (NOLOCK)
			WHERE COUNTY_NAME=@COUNTY_NAME AND STATE_ID=@STATE_ID

		SELECT @CNTR_ID = CNTR_ID FROM dbo.CMS_COUNTRY (NOLOCK)
			WHERE CNTR_NAME=@COUNTRY_NAME

		INSERT INTO dbo.CMS_ADDRESS
		(
			ADDR_TYPE_ID,
			CONTACT_ID,
			STATE_ID,
			COUNTY_ID,
			ADDRESS_1_LINE,
			ADDRESS_2_LINE,
			ADDRESS_CITY,
			ADDRESS_ZIPCODE,
			ADDRESS_IS_PRIM,
			ADDRESS_TEXT,
			CNTR_ID,
			ADDRESS_LINE_ATTN
		)
		VALUES
		(
			1,  -- CONTACT
			@CONTACT_ID,
			@STATE_ID,
			@COUNTY_ID,
			@ADDRESS_1_LINE,
			@ADDRESS_2_LINE,
			@ADDRESS_CITY,
			@ADDRESS_ZIPCODE,
			@ADDRESS_IS_PRIM,
			@ADDRESS_TEXT,
			@CNTR_ID,
			@ADDRESS_LINE_ATTN
		)

		-- NEED THE ID THAT WAS INSERTED FOR AUDIT
		SET @ADDRESS_ID = SCOPE_IDENTITY()

		print 'ADDRESS inserted: id = ' + cast(@ADDRESS_ID as varchar(20))