<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="HOST" elementType="Argument">
            <stringProp name="Argument.name">HOST</stringProp>
            <stringProp name="Argument.value">${__P(host,10.10.0.14)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value">${__P(port,1433)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DATABASE" elementType="Argument">
            <stringProp name="Argument.name">DATABASE</stringProp>
            <stringProp name="Argument.value">${__P(db,cmnbs_qa2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER" elementType="Argument">
            <stringProp name="Argument.name">USER</stringProp>
            <stringProp name="Argument.value">${__P(user,cmnbs)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PSWD" elementType="Argument">
            <stringProp name="Argument.name">PSWD</stringProp>
            <stringProp name="Argument.value">${__P(pswd,Welc0me!)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOOPS" elementType="Argument">
            <stringProp name="Argument.name">LOOPS</stringProp>
            <stringProp name="Argument.value">${__P(loops,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RAMP_UP" elementType="Argument">
            <stringProp name="Argument.name">RAMP_UP</stringProp>
            <stringProp name="Argument.value">${__P(ramp_up,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USERS_COUNT_TC1" elementType="Argument">
            <stringProp name="Argument.name">USERS_COUNT_TC1</stringProp>
            <stringProp name="Argument.value">${__P(users_count_tc1,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USERS_COUNT_TC2" elementType="Argument">
            <stringProp name="Argument.name">USERS_COUNT_TC2</stringProp>
            <stringProp name="Argument.value">${__P(users_count_tc2,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USERS_COUNT_TC3" elementType="Argument">
            <stringProp name="Argument.name">USERS_COUNT_TC3</stringProp>
            <stringProp name="Argument.value">${__P(users_count_tc3,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USERS_COUNT_TC4" elementType="Argument">
            <stringProp name="Argument.name">USERS_COUNT_TC4</stringProp>
            <stringProp name="Argument.value">${__P(users_count_tc4,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">pool</stringProp>
        <stringProp name="dbUrl">jdbc:sqlserver://${HOST}:${PORT};databaseName=${DATABASE};user=${USER};password=${PSWD}</stringProp>
        <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">Welc0me!</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">TRANSACTION_READ_UNCOMMITTED</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">cmnbs</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="initQuery"></stringProp>
        <stringProp name="connectionProperties"></stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.BytesThroughputOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Bytes Throughput Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="1477381120">
            <stringProp name="1180709214">${HOST}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-823333201">
            <stringProp name="1180709214">${HOST}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-1993889503">Memory</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-163799910">
            <stringProp name="1180709214">${HOST}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2590131">Swap</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="1065676050">
            <stringProp name="1180709214">${HOST}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-710993185">
            <stringProp name="1180709214">${HOST}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-274342153">Network I/O</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-836213054">
            <stringProp name="1180709214">${HOST}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="82881">TCP</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ConnectTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Connect Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseCodesPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Codes per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.LatenciesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Latencies Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseCodesPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Codes per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.HitsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Hits per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://10.10.0.205:8086/write?db=jmeter_mssql_server</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">application name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">Test name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="MS_SQL_TestCase#1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LOOPS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${USERS_COUNT_TC1}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="MS_SQL_TestCase#1" enabled="true">
          <stringProp name="dataSource">pool</stringProp>
          <stringProp name="query">---------------TEST Case #2
--Script Select only script:
        
DECLARe @aid INTEGER = ROUND(RAND()*100000*1000, 0),
		@abalance int

SELECT @abalance = abalance FROM pgbench_accounts WHERE aid = @aid;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">8</intProp>
          <stringProp name="Assertion.scope">all</stringProp>
          <stringProp name="Scope.variable">Result</stringProp>
        </ResponseAssertion>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="MS_SQL_TestCase#2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LOOPS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${USERS_COUNT_TC2}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="MS_SQL_TestCase#2" enabled="true">
          <stringProp name="dataSource">pool</stringProp>
          <stringProp name="query">---------------TEST Case #2

--Script, read-write:

DECLARE @aid INTEGER = ROUND(RAND()*100000*1000, 0)
DECLARE @bid INTEGER = ROUND(RAND()*1*1000, 0) 
DECLARE @tid INTEGER = ROUND(RAND()*10*1000, 0) 
DECLARE @delta INTEGER = ROUND(RAND()*10*1000-5000, 0),
		@abalance int

BEGIN;
	UPDATE pgbench_accounts SET abalance = abalance + @delta WHERE aid = @aid;
	SELECT @abalance = abalance FROM pgbench_accounts WHERE aid = @aid;
	UPDATE pgbench_tellers SET tbalance = tbalance + @delta WHERE tid = @tid;
	UPDATE pgbench_branches SET bbalance = bbalance + @delta WHERE bid = @bid;
	INSERT INTO pgbench_history (tid, bid, aid, delta, mtime) VALUES (@tid, @bid, @aid, @delta, CURRENT_TIMESTAMP);
END;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">8</intProp>
          <stringProp name="Assertion.scope">all</stringProp>
          <stringProp name="Scope.variable">Result</stringProp>
        </ResponseAssertion>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="MS_SQL_TestCase#3" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LOOPS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${USERS_COUNT_TC3}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="MS_SQL_TestCase#3" enabled="true">
          <stringProp name="dataSource">pool</stringProp>
          <stringProp name="query">--Pre Run once

IF OBJECT_ID(&apos;dbo.TMP_CASE_TYPE__OFFICE_CODE&apos;, &apos;U&apos;) IS NOT NULL 
  DROP TABLE dbo.TMP_CASE_TYPE__OFFICE_CODE

CREATE TABLE TMP_CASE_TYPE__OFFICE_CODE ( 
	CASE_TYPE_NAME NVARCHAR(50),  
	OFFICE_CODE NVARCHAR(50),
	OFFICE_ID NUMERIC(10,0))

INSERT INTO dbo.TMP_CASE_TYPE__OFFICE_CODE(CASE_TYPE_NAME, OFFICE_CODE, OFFICE_ID)
SELECT
CT.CASE_TYPE_NAME,
OFC.OFFICE_CODE,
OFC.OFFICE_ID

	FROM   
	dbo.CMS_CASE_FILE CF WITH (NOLOCK)   
	LEFT OUTER JOIN dbo.CMS_CASE C WITH (NOLOCK) ON C.CASE_FILE_ID = CF.CASE_FILE_ID  
	LEFT OUTER JOIN dbo.CMS_CASE_TYPE CT WITH (NOLOCK) ON C.CASE_TYPE_ID = CT.CASE_TYPE_ID  
	LEFT OUTER JOIN dbo.CMS_CASE_TEMPLATE TMPL WITH (NOLOCK) ON C.CASE_TMPL_ID = TMPL.CASE_TMPL_ID  
	LEFT OUTER JOIN dbo.CMS_LOCATION LOC WITH (NOLOCK) ON LOC.LOCATION_ID = C.LOCATION_ID   
	LEFT OUTER JOIN dbo.CMS_CLIENT_HISTORY ch WITH (NOLOCK) ON ch.CASE_FILE_ID = cf.CASE_FILE_ID AND CH.CLIENT_HIST_CUR_CLIENT=1 AND CH.CLIENT_ROLE_ID=1     
	LEFT OUTER JOIN dbo.CMS_CLIENT cli WITH (NOLOCK) ON cli.CLIENT_ID = ch.CLIENT_ID  
	LEFT OUTER JOIN dbo.CMS_OFFICE OFC WITH (NOLOCK) ON CF.OFFICE_ID = OFC.OFFICE_ID
	LEFT OUTER JOIN dbo.CMS_ADDRESS ADR WITH (NOLOCK) ON CF.CASE_FILE_ID = ADR.CASE_FILE_ID  
	LEFT OUTER JOIN dbo.CMS_COUNTY CN WITH (NOLOCK) ON ADR.COUNTY_ID = CN.COUNTY_ID  
	LEFT OUTER JOIN dbo.CMS_STATE ST WITH (NOLOCK) ON ADR.STATE_ID = ST.STATE_ID
	LEFT OUTER JOIN dbo.CMS_STATE TMPLST WITH (NOLOCK) ON TMPL.STATE_ID = TMPLST.STATE_ID  
	LEFT OUTER JOIN dbo.CMS_CASE_STATUS cs WITH (NOLOCK) ON c.CASE_ID = cs.CASE_ID AND cs.CASE_STAT_CUR_STAT=1  
	LEFT OUTER JOIN dbo.CMS_STATUS_TYPE s WITH (NOLOCK)ON cs.STATUS_ID = s.STATUS_ID
	LEFT OUTER JOIN dbo.CMS_REFERRING_SYSTEM REF (NOLOCK) ON C.REF_SYS_ID=REF.REF_SYS_ID WHERE 1=1 
AND (ISNULL(cli.SUPER_CODE_ID, -1) &lt;&gt; 3363 OR OFC.OFFICE_CODE NOT IN (&apos;AZ&apos;, &apos;GA&apos;, &apos;KS&apos;, &apos;LA&apos;, &apos;MO&apos;, &apos;OIK&apos;, &apos;TX&apos;, &apos;VA&apos;) AND cli.SUPER_CODE_ID = 3363) 
and CT.CASE_TYPE_NAME is not null
GROUP BY CT.CASE_TYPE_NAME,
OFC.OFFICE_CODE,
OFC.OFFICE_ID
having count(*) &gt; 1000
order by count(*) desc

-----------------------------------------------------------------------------

DECLARE @CASE_TYPE_NAME NVARCHAR(50),  
	@OFFICE_ID NUMERIC(10,0),
	@OFFICE_CODE NVARCHAR(50),
	@CASE_ID NUMERIC(10,0),
	@CLIENT_CODE VARCHAR(20),
	@CASE_FILE_NUMB VARCHAR(20),
	@CASE_FILE_ID NUMERIC (10,0),
	@CLIENT_ID NUMERIC(10,0),
	@who_has FULLNAME = N&apos;Perf Test&apos;,
	@USERID NVARCHAR(20) = N&apos;6951&apos;,
	@USERNAME NVARCHAR(160) = N&apos;Perf Test&apos;,
	@ACT_ID NUMERIC(10,0),
	@OWNDATE datetime = getdate(),
	@STATE_ID NUMERIC(10,0) = NULL,  
	@CASE_TYPE_ID NUMERIC(10,0) = 1,  
	@PROCESS_TYPE_ID NUMERIC(10,0) = NULL,  
	@IS_ACTIVE BIT = 1,
	@VAR1 NUMERIC(10,0),
	@VAR2 NUMERIC(10,0),
	@VAR3 NUMERIC(10,0),
	@VAR4 NVARCHAR(160),
	@VAR5 NVARCHAR(160),
	@VAR6 NVARCHAR(160)

SELECT TOP 1 @CASE_TYPE_NAME = CASE_TYPE_NAME, @OFFICE_ID = OFFICE_ID, @OFFICE_CODE = OFFICE_CODE 
FROM dbo.TMP_CASE_TYPE__OFFICE_CODE
order by rand(CHECKSUM(NEWID()))
-- get random CASE_TYPE_NAME

--exec CMSWS_SP_SEARCH_CASES_USER_LOGIN @OFFICE_CODE=N&apos;AL&apos;,@CASE_FILE_NUMB=NULL,@ACTION_NUMB=NULL,@REF_SYS_NAME=NULL,@CASE_TYPE_NAME=N&apos;Foreclosure&apos;,@CASE_TMPL_STATE_CODE=NULL,@CASE_TMPL_NAME=NULL,@CASE_FILE_REF=NULL,@CLIENT_CODE=NULL,@CASE_FILE_AGENCY=NULL,@CASE_FILE_INVESTOR=NULL,@CASE_FILE_INVESTOR_NUM=NULL,@STATUS_NAME=N&apos;ACTIVE&apos;,@CASE_FILE_LOAN_NUMB=NULL,@CASE_COURT_NUMB=NULL,@CASE_OUTSOURCER_NUMB=NULL,@PROP_ADDRESS_1_LINE=NULL,@PROP_ADDRESS_2_LINE=NULL,@PROP_ADDRESS_CITY=NULL,@PROP_ADDRESS_STATE_CODE=NULL,@PROP_ADDRESS_ZIPCODE=NULL,@PROP_ADDRESS_COUNTY_NAME=NULL,@CASE_WHO_HAS=NULL,@CASE_FILE_RECEIVED=NULL,@SCHEDULED_MILESTONE_NAME=NULL,@SCHEDULED_MILESTONE_START_DATE=NULL,@SCHEDULED_MILESTONE_END_DATE=NULL,@COMPLETED_MILESTONE_NAME=NULL,@COMPLETED_MILESTONE_START_DATE=NULL,@COMPLETED_MILESTONE_END_DATE=NULL,@IS_ARCH=NULL,@TOP=200,@ISOFFSHOREUSER=0,@USER_LOGIN=N&apos;aruslyakov&apos;,@SUB_PROCESS_TEMPLATE_ID=NULL,@SUB_PROCESS_STATUS_NAME=NULL

SELECT TOP 200
	@CASE_ID = C.CASE_ID
	FROM   
	dbo.CMS_CASE_FILE CF WITH (NOLOCK)   
	LEFT OUTER JOIN dbo.CMS_CASE C WITH (NOLOCK) ON C.CASE_FILE_ID = CF.CASE_FILE_ID  
	LEFT OUTER JOIN dbo.CMS_CASE_TYPE CT WITH (NOLOCK) ON C.CASE_TYPE_ID = CT.CASE_TYPE_ID  
	LEFT OUTER JOIN dbo.CMS_CASE_TEMPLATE TMPL WITH (NOLOCK) ON C.CASE_TMPL_ID = TMPL.CASE_TMPL_ID  
	LEFT OUTER JOIN dbo.CMS_LOCATION LOC WITH (NOLOCK) ON LOC.LOCATION_ID = C.LOCATION_ID   
	LEFT OUTER JOIN dbo.CMS_CLIENT_HISTORY ch WITH (NOLOCK) ON ch.CASE_FILE_ID = cf.CASE_FILE_ID AND CH.CLIENT_HIST_CUR_CLIENT=1 AND CH.CLIENT_ROLE_ID=1     
	LEFT OUTER JOIN dbo.CMS_CLIENT cli WITH (NOLOCK) ON cli.CLIENT_ID = ch.CLIENT_ID  
	LEFT OUTER JOIN dbo.CMS_OFFICE OFC WITH (NOLOCK) ON CF.OFFICE_ID = OFC.OFFICE_ID
	LEFT OUTER JOIN dbo.CMS_ADDRESS ADR WITH (NOLOCK) ON CF.CASE_FILE_ID = ADR.CASE_FILE_ID  
	LEFT OUTER JOIN dbo.CMS_COUNTY CN WITH (NOLOCK) ON ADR.COUNTY_ID = CN.COUNTY_ID  
	LEFT OUTER JOIN dbo.CMS_STATE ST WITH (NOLOCK) ON ADR.STATE_ID = ST.STATE_ID
	LEFT OUTER JOIN dbo.CMS_STATE TMPLST WITH (NOLOCK) ON TMPL.STATE_ID = TMPLST.STATE_ID  
	LEFT OUTER JOIN dbo.CMS_CASE_STATUS cs WITH (NOLOCK) ON c.CASE_ID = cs.CASE_ID AND cs.CASE_STAT_CUR_STAT=1  
	LEFT OUTER JOIN dbo.CMS_STATUS_TYPE s WITH (NOLOCK)ON cs.STATUS_ID = s.STATUS_ID
	LEFT OUTER JOIN dbo.CMS_REFERRING_SYSTEM REF (NOLOCK) ON C.REF_SYS_ID=REF.REF_SYS_ID WHERE 1=1 
AND (ISNULL(cli.SUPER_CODE_ID, -1) &lt;&gt; 3363 OR OFC.OFFICE_CODE NOT IN (&apos;AZ&apos;, &apos;GA&apos;, &apos;KS&apos;, &apos;LA&apos;, &apos;MO&apos;, &apos;OIK&apos;, &apos;TX&apos;, &apos;VA&apos;) AND cli.SUPER_CODE_ID = 3363) 
 AND OFC.OFFICE_CODE =@OFFICE_CODE
 AND CT.CASE_TYPE_NAME =@CASE_TYPE_NAME AND S.STATUS_NAME =&apos;ACTIVE&apos;

--select @CASE_TYPE_NAME, @OFFICE_ID, @OFFICE_CODE 

 IF @CASE_ID is not null 
 BEGIN
	 --&gt; if empty finish TS else get Case_id from the firts row

	--exec CMSWS_SP_GET_CMS_CASE_INFO @CASE_ID=3212238  -- get CHE


		SELECT
			@CASE_FILE_ID = C.CASE_FILE_ID, 
			@CASE_FILE_NUMB = CF.CASE_FILE_NUMB, 
			@VAR4 = C.CASE_NUMBER, 
			@VAR5 = CF.CASE_FILE_REF,
			@VAR6 = C.CASE_HOLDER_NAME,
			@CLIENT_CODE = CLI.CLIENT_CODE--,
		FROM
			dbo.CMS_CASE_FILE CF (NOLOCK)
			INNER JOIN dbo.CMS_CASE C (NOLOCK) ON C.CASE_FILE_ID=CF.CASE_FILE_ID
			LEFT OUTER JOIN dbo.CMS_LOAN_TYPE LT WITH (NOLOCK) ON CF.LOAN_TYPE_ID=LT.LOAN_TYPE_ID
			INNER JOIN dbo.CMS_CASE_TYPE CT WITH (NOLOCK) ON CT.CASE_TYPE_ID=C.CASE_TYPE_ID
			INNER JOIN dbo.CMS_CASE_STATUS CS WITH (NOLOCK) ON C.CASE_ID=CS.CASE_ID AND CS.CASE_STAT_CUR_STAT=1
			INNER JOIN dbo.CMS_STATUS_TYPE ST WITH (NOLOCK) ON CS.STATUS_ID=ST.STATUS_ID
			LEFT OUTER JOIN dbo.CMS_DELAY_CODE DC WITH (NOLOCK) ON DC.DELAY_CODE_ID=CS.DELAY_CODE_ID
			INNER JOIN dbo.CMS_CLIENT_HISTORY CH  WITH (NOLOCK) ON CH.CASE_FILE_ID = CF.CASE_FILE_ID AND CH.CLIENT_ROLE_ID=1 AND CH.CLIENT_HIST_CUR_CLIENT=1
			INNER JOIN dbo.CMS_CLIENT CLI  WITH (NOLOCK) ON CLI.CLIENT_ID = CH.CLIENT_ID
			LEFT OUTER JOIN dbo.CMS_LEGAL_PORTION LP (NOLOCK) ON CLI.LEGAL_PORTION_ID=LP.LEGAL_PORTION_ID
			LEFT OUTER JOIN dbo.CMS_REFERRING_SYSTEM REF WITH (NOLOCK) ON C.REF_SYS_ID=REF.REF_SYS_ID
			LEFT OUTER JOIN dbo.CMS_LOCATION LOC WITH  (NOLOCK) ON C.LOCATION_ID=LOC.LOCATION_ID
			LEFT OUTER JOIN dbo.CMS_ADDRESS CA_PROP WITH (NOLOCK) ON CF.CASE_FILE_ID = CA_PROP.CASE_FILE_ID AND CA_PROP.ADDR_TYPE_ID = 12
			LEFT OUTER JOIN dbo.CMS_COUNTY CO_PROP WITH (NOLOCK) ON CA_PROP.COUNTY_ID = CO_PROP.COUNTY_ID
			LEFT OUTER JOIN dbo.CMS_OCCUPANCY OCC (NOLOCK) ON C.OCCUPANCY_ID=OCC.OCCUPANCY_ID
			LEFT OUTER JOIN dbo.CMS_DELAY_CODE_SUB_TYPE DST (NOLOCK) ON CS.DELAY_CODE_SUB_TYPE_ID=DST.DELAY_CODE_SUB_TYPE_ID
			LEFT OUTER JOIN dbo.CMS_CASE_TEMPLATE TMPL WITH (NOLOCK) ON C.CASE_TMPL_ID=TMPL.CASE_TMPL_ID
		WHERE
			C.CASE_ID=@CASE_ID

	--get client_code, case_file_number, case_file_id


	--exec CMSWS_SP_GET_CASE_FILE_INFO_BY_CASE_ID @CASE_ID=3212238

		SELECT
		@VAR1 = CF.CASE_FILE_ID,
		@VAR2 = CF.OFFICE_ID,
		@VAR4 = OFC.OFFICE_CODE,
		@VAR5 = CF.CASE_FILE_NUMB,
		@VAR3 = CF.LOAN_TYPE_ID,
		@VAR6 = LT.LOAN_TYPE_NAME
		FROM
		dbo.CMS_CASE C WITH (NOLOCK)
		INNER JOIN dbo.CMS_CASE_FILE CF WITH (NOLOCK) ON C.CASE_FILE_ID=CF.CASE_FILE_ID
		LEFT OUTER JOIN dbo.CMS_LOAN_TYPE LT WITH (NOLOCK) ON CF.LOAN_TYPE_ID=LT.LOAN_TYPE_ID
		INNER JOIN dbo.CMS_OFFICE OFC WITH (NOLOCK) ON CF.OFFICE_ID=OFC.OFFICE_ID
		WHERE
		C.CASE_ID=@CASE_ID

	

	-- exec CMSWS_SP_GET_CLIENT_INFO @CLIENT_CODE=N&apos;CHE&apos; -- get client_id

		IF (@CLIENT_CODE IS NULL)
		BEGIN
			SELECT
				@CLIENT_ID = CLI.CLIENT_ID,
				@VAR4 = CLI.CLIENT_NAME,
				@VAR5 = CLI.CLIENT_CODE,
				@VAR6 = CS.STATUS_NAME
			FROM dbo.CMS_CLIENT CLI (NOLOCK)
			LEFT OUTER JOIN dbo.CMS_SUPER_CODE SC (NOLOCK) ON CLI.SUPER_CODE_ID=SC.SUPER_CODE_ID
			LEFT OUTER JOIN dbo.CMS_CLIENT_STATUS CS (NOLOCK) ON CLI.CL_STATUS_ID=CS.CL_STATUS_ID
			LEFT OUTER JOIN dbo.CMS_LEGAL_PORTION LP (NOLOCK) ON CLI.LEGAL_PORTION_ID=LP.LEGAL_PORTION_ID
			LEFT OUTER JOIN dbo.CMS_BILLING_PORTION BP (NOLOCK) ON CLI.BILLING_PORTION_ID=BP.BILLING_PORTION_ID
			LEFT OUTER JOIN dbo.CMS_CLIENT_REFERRING_SYS CR (NOLOCK) ON CLI.CLIENT_REFERRING_SYS_ID=CR.REFERRING_SYS_ID
		END
		ELSE BEGIN
			SELECT
				@CLIENT_ID = CLI.CLIENT_ID,
				@VAR4 = CLI.CLIENT_NAME,
				@VAR5 = CLI.CLIENT_CODE,
				@VAR6 = CS.STATUS_NAME
			FROM dbo.CMS_CLIENT CLI (NOLOCK)
			LEFT OUTER JOIN dbo.CMS_SUPER_CODE SC (NOLOCK) ON CLI.SUPER_CODE_ID=SC.SUPER_CODE_ID
			LEFT OUTER JOIN dbo.CMS_CLIENT_STATUS CS (NOLOCK) ON CLI.CL_STATUS_ID=CS.CL_STATUS_ID
			LEFT OUTER JOIN dbo.CMS_LEGAL_PORTION LP (NOLOCK) ON CLI.LEGAL_PORTION_ID=LP.LEGAL_PORTION_ID
			LEFT OUTER JOIN dbo.CMS_BILLING_PORTION BP (NOLOCK) ON CLI.BILLING_PORTION_ID=BP.BILLING_PORTION_ID
			LEFT OUTER JOIN dbo.CMS_CLIENT_REFERRING_SYS CR (NOLOCK) ON CLI.CLIENT_REFERRING_SYS_ID=CR.REFERRING_SYS_ID
			WHERE CLI.CLIENT_CODE = @CLIENT_CODE
		END
	-- get Client_id

	--exec CMSWS_SP_GET_CLIENT_FULL_INFO @CLIENT_ID=587

		SELECT
			@VAR1 = CLIENT_ID, @VAR4 = CLIENT_CODE, @VAR2 = CL_STATUS_ID, @VAR3 = IR_ID

		FROM dbo.CMS_CLIENT CLI (NOLOCK)
		WHERE CLI.CLIENT_ID=@CLIENT_ID
	
	-- exec CMS_P_GET_CONTACT_FOR_CLIENT @CLIENT_ID=587


		-- get contact for client
		SELECT TOP 1	@VAR1 = cc.CLIENT_CONT_ID, @VAR2 = cc.CLIENT_ID, @VAR3 = cc.CLIENT_CONT_TYPE_ID, @VAR5 = cct.CLIENT_CONT_TYPE_NAME,
				@VAR4 = CONCAT(
					ISNULL(a.ADDRESS_1_LINE + &apos;, &apos;, &apos;&apos;), 
					ISNULL(a.ADDRESS_2_LINE + &apos;, &apos;, &apos;&apos;),
					ISNULL(a.ADDRESS_CITY + &apos;, &apos;, &apos;&apos;), 
					ISNULL(s.STATE_CODE + &apos;, &apos;, &apos;&apos;),
					ISNULL(a.ADDRESS_ZIPCODE, &apos;&apos;)
				)
		FROM	dbo.CMS_CLIENT_CONTACT AS cc (NOLOCK) INNER JOIN 
				dbo.CMS_CLIENT_CONTACT_TYPE cct (NOLOCK) ON cc.CLIENT_CONT_TYPE_ID = cct.CLIENT_CONT_TYPE_ID
				LEFT OUTER JOIN dbo.CMS_ADDRESS a (NOLOCK) ON a.CLIENT_CONT_ID = cc.CLIENT_CONT_ID AND a.ADDRESS_IS_PRIM = 1
				LEFT JOIN CMS_STATE s ON s.STATE_ID = a.STATE_ID
		WHERE   cc.CLIENT_ID = @client_id

	--exec CMSWS_SP_GET_CMS_CASE_INFO_BY_CASENUMBER @OFFICE_CODE=N&apos;AL&apos;,@CASE_FILE_NUMB=N&apos;14-003582&apos;

		/* RETURNS A LIST OF ACTIONS FOR THE GIVEN OFFICE/CASE # */
		SELECT TOP 1
			@VAR1 = C.CASE_ID, 
			@VAR2 = C.CASE_FILE_ID, 
			@VAR4 = CF.CASE_FILE_LOAN_NUMB, 
			@VAR5 = CF.CASE_FILE_NUMB, 
			@VAR6 = C.CASE_NUMBER

		FROM
			dbo.CMS_CASE_FILE CF (NOLOCK)
			INNER JOIN dbo.CMS_CASE C (NOLOCK) ON C.CASE_FILE_ID=CF.CASE_FILE_ID
			LEFT OUTER JOIN dbo.CMS_LOAN_TYPE LT WITH (NOLOCK) ON CF.LOAN_TYPE_ID=LT.LOAN_TYPE_ID
			INNER JOIN dbo.CMS_CASE_TYPE CT WITH (NOLOCK) ON CT.CASE_TYPE_ID=C.CASE_TYPE_ID
			INNER JOIN dbo.CMS_CASE_STATUS CS WITH (NOLOCK) ON C.CASE_ID=CS.CASE_ID AND CS.CASE_STAT_CUR_STAT=1
			INNER JOIN dbo.CMS_STATUS_TYPE ST WITH (NOLOCK) ON CS.STATUS_ID=ST.STATUS_ID
			LEFT OUTER JOIN dbo.CMS_DELAY_CODE DC WITH (NOLOCK) ON DC.DELAY_CODE_ID=CS.DELAY_CODE_ID
			INNER JOIN dbo.CMS_CLIENT_HISTORY CH  WITH (NOLOCK) ON CH.CASE_FILE_ID = CF.CASE_FILE_ID AND CH.CLIENT_ROLE_ID=1 AND CH.CLIENT_HIST_CUR_CLIENT=1
			INNER JOIN dbo.CMS_CLIENT CLI  WITH (NOLOCK) ON CLI.CLIENT_ID = CH.CLIENT_ID
			LEFT OUTER JOIN dbo.CMS_REFERRING_SYSTEM REF WITH (NOLOCK) ON C.REF_SYS_ID=REF.REF_SYS_ID
			INNER JOIN dbo.CMS_OFFICE OFC WITH (NOLOCK) ON CF.OFFICE_ID=OFC.OFFICE_ID
			LEFT OUTER JOIN dbo.CMS_LOCATION LOC WITH  (NOLOCK) ON C.LOCATION_ID=LOC.LOCATION_ID
			LEFT OUTER JOIN dbo.CMS_ADDRESS CA_PROP WITH (NOLOCK) ON CF.CASE_FILE_ID = CA_PROP.CASE_FILE_ID AND CA_PROP.ADDR_TYPE_ID = 12
			LEFT OUTER JOIN dbo.CMS_COUNTY CO_PROP WITH (NOLOCK) ON CA_PROP.COUNTY_ID = CO_PROP.COUNTY_ID
			LEFT OUTER JOIN dbo.CMS_OCCUPANCY OCC (NOLOCK) ON C.OCCUPANCY_ID=OCC.OCCUPANCY_ID
			LEFT OUTER JOIN dbo.CMS_DELAY_CODE_SUB_TYPE DST (NOLOCK) ON CS.DELAY_CODE_SUB_TYPE_ID=DST.DELAY_CODE_SUB_TYPE_ID
			LEFT OUTER JOIN dbo.CMS_CASE_TEMPLATE TMPL WITH (NOLOCK) ON C.CASE_TMPL_ID=TMPL.CASE_TMPL_ID

		WHERE
			CF.CASE_FILE_NUMB=@CASE_FILE_NUMB AND
			OFC.OFFICE_CODE=@OFFICE_CODE

		
	--exec CMSWS_SP_GET_PROPERTY_ADDRESS @CASE_FILE_ID=2067753

		SELECT TOP 1 
		@VAR1 = ADRS.ADDRESS_ID,
		@VAR4 = ADRS.ADDRESS_1_LINE,
		@VAR5 = ADRS.ADDRESS_2_LINE
		FROM
		dbo.CMS_ADDRESS ADRS WITH (NOLOCK)
		LEFT OUTER JOIN dbo.CMS_STATE ST WITH (NOLOCK) ON ADRS.STATE_ID=ST.STATE_ID
		LEFT OUTER JOIN dbo.CMS_COUNTY CNTY WITH (NOLOCK) ON ADRS.COUNTY_ID=CNTY.COUNTY_ID
		LEFT OUTER JOIN dbo.CMS_COUNTRY CNTRY WITH (NOLOCK) ON ADRS.CNTR_ID=CNTRY.CNTR_ID
		WHERE
		ADRS.ADDR_TYPE_ID=12 AND
		ADRS.CASE_FILE_ID=@CASE_FILE_ID
	
	--exec CMSWS_SP_GET_ALERTS_ON_ACTION @CASE_ID=3212238
	
		SELECT
		@VAR1 = BP.BP_ID,
		@VAR4 = BP.BP_NAME
		FROM
		dbo.CMS_BOILER_PLATE_LINK BPL (NOLOCK)
		INNER JOIN dbo.CMS_BOILER_PLATE BP (NOLOCK) ON BPL.BP_ID=BP.BP_ID
		WHERE
		BPL.CASE_ID=@CASE_ID
		

	-- exec CMS_P_GET_ACTION_CASE_ASSOCIATED @cf_id=2067753
	declare
		@cf_id numeric(10)

	-- set case id
	select @cf_id=@CASE_FILE_ID
	
		DECLARE @grp_id numeric(10)
		SELECT @grp_id = CASE_FILE_GRP_ID FROM dbo.CMS_CASE_FILE_ASSOCIATED WITH (NOLOCK) 
		WHERE CASE_FILE_ID = @cf_id
	

	SELECT TOP 1    @VAR1 = cfa.CFA_ID, 
			@VAR2 = c.CASE_ID, 
			@VAR3 = cf.CASE_FILE_ID,
			@VAR4 = cf.CASE_FILE_NUMB, 
			@VAR5 = c.CASE_NUMBER,
			@VAR6 = cf.CASE_FILE_REF
	FROM        dbo.CMS_CASE_FILE_ASSOCIATED AS cfa WITH (NOLOCK) INNER JOIN
						  dbo.CMS_CASE_FILE AS cf WITH (NOLOCK) ON cfa.CASE_FILE_ID = cf.CASE_FILE_ID INNER JOIN
						  dbo.CMS_CLIENT_HISTORY AS ch WITH (NOLOCK) ON cf.CASE_FILE_ID = ch.CASE_FILE_ID AND ch.CLIENT_HIST_CUR_CLIENT = 1 AND ch.CLIENT_ROLE_ID = 1 INNER JOIN
						  dbo.CMS_CLIENT AS cl WITH (NOLOCK) ON ch.CLIENT_ID = cl.CLIENT_ID LEFT OUTER JOIN 
							  dbo.CMS_CASE c WITH (NOLOCK) INNER JOIN
    	    					  dbo.CMS_CASE_STATUS cs WITH (NOLOCK) INNER JOIN
        	    	          		dbo.CMS_STATUS_TYPE st on cs.STATUS_ID = st.STATUS_ID
        	    				  ON c.CASE_ID = cs.CASE_ID AND cs.CASE_STAT_CUR_STAT =1 
        	    			  ON cf.CASE_FILE_ID = c.CASE_FILE_ID 
	WHERE     cfa.CASE_FILE_GRP_ID = @grp_id


	--exec CMSWS_SP_GET_ACTION_INFO_BY_CASE_ID @CASE_ID=3212238

		SELECT TOP 1 
		@VAR1 = C.CASE_ID,
		@VAR2 = C.CASE_FILE_ID,
		@VAR4 = C.CASE_NUMBER,
		@VAR3 = C.CASE_TYPE_ID,
		@VAR5 = CT.CASE_TYPE_NAME,
		@VAR6 = LOC.LOCATION_NAME
		FROM dbo.CMS_CASE C WITH (NOLOCK)
		INNER JOIN CMS_CASE_FILE CF WITH(NOLOCK) ON C.CASE_FILE_ID = CF.CASE_FILE_ID
		INNER JOIN CMS_OFFICE O WITH(NOLOCK) ON CF.OFFICE_ID = O.OFFICE_ID
		INNER JOIN dbo.CMS_CASE_TYPE CT WITH (NOLOCK) ON C.CASE_TYPE_ID=CT.CASE_TYPE_ID
		LEFT OUTER JOIN dbo.CMS_LOCATION LOC WITH (NOLOCK) ON C.LOCATION_ID=LOC.LOCATION_ID
		LEFT OUTER JOIN dbo.CMS_REFERRING_SYSTEM REF WITH (NOLOCK) ON C.REF_SYS_ID=REF.REF_SYS_ID
		LEFT OUTER JOIN dbo.CMS_OCCUPANCY OCC WITH (NOLOCK) ON C.OCCUPANCY_ID=OCC.OCCUPANCY_ID
		LEFT OUTER JOIN dbo.CMS_DWELLING_TYPE DT WITH (NOLOCK) ON C.DT_ID=DT.DT_ID
		LEFT OUTER JOIN dbo.CMS_MORTGAGE_LIEN_POSITION MLP WITH (NOLOCK) ON C.MLP_ID=MLP.MLP_ID
		WHERE C.CASE_ID=@CASE_ID

	--exec CMS_P_MY_LAST_TEN_CASE_UPDATE @who_has=N&apos;Andriy Ruslyakov&apos;,@case_file_id=2067753,@case_id=3212238


		DECLARE @count NUMBERID
		DECLARE @old_date datetime
		DECLARE @case FULLNAME

		-- get case file number plus case number 
		SELECT @case = (cf.CASE_FILE_NUMB + &apos; &apos; + c.CASE_NUMBER) 
		FROM 	dbo.CMS_CASE c (NOLOCK) INNER JOIN
         		dbo.CMS_CASE_FILE cf (NOLOCK)
			 ON c.CASE_FILE_ID = cf.CASE_FILE_ID
		WHERE     
			(c.CASE_ID = @case_id)

		UPDATE dbo.CMS_MY_LAST_TEN_CASE 
		SET LOAD_DATE = getdate()
		WHERE 
			CASE_WHO_HAS = @who_has AND 
			CASE_FILE_NUMB = @case

	/*  If no record were update therefore is because it does not exist */    
		IF (@@ROWCOUNT = 0)
			BEGIN
				-- get  counting Case and last oldening loading date
         		SELECT @count = COUNT(CASE_ID), @old_date = min(LOAD_DATE) FROM dbo.CMS_MY_LAST_TEN_CASE (NOLOCK)
     			WHERE CASE_WHO_HAS = @who_has

				-- deleting last oldening loading date if count &gt; 10
				IF @count &gt;= 10 
					DELETE FROM dbo.CMS_MY_LAST_TEN_CASE 
					WHERE 
						CASE_WHO_HAS = @who_has AND 
						LOAD_DATE = @old_date
				-- inserting loading Case
				INSERT INTO dbo.CMS_MY_LAST_TEN_CASE (CASE_ID, CASE_FILE_ID, CASE_FILE_NUMB, CASE_WHO_HAS, LOAD_DATE) 
				VALUES (@case_id, @case_file_id, @case, @who_has, getdate())

			END

	--exec CMSWS_SP_GET_PROPERTY_ADDRESS @CASE_FILE_ID=2067753


		SELECT TOP 1 
		@VAR1 = ADRS.ADDRESS_ID,
		@VAR4 = ADRS.ADDRESS_1_LINE,
		@VAR5 = ADRS.ADDRESS_2_LINE,
		@VAR6 = CNTRY.CNTR_NAME
		FROM
		dbo.CMS_ADDRESS ADRS WITH (NOLOCK)
		LEFT OUTER JOIN dbo.CMS_STATE ST WITH (NOLOCK) ON ADRS.STATE_ID=ST.STATE_ID
		LEFT OUTER JOIN dbo.CMS_COUNTY CNTY WITH (NOLOCK) ON ADRS.COUNTY_ID=CNTY.COUNTY_ID
		LEFT OUTER JOIN dbo.CMS_COUNTRY CNTRY WITH (NOLOCK) ON ADRS.CNTR_ID=CNTRY.CNTR_ID
		WHERE
		ADRS.ADDR_TYPE_ID=12 AND
		ADRS.CASE_FILE_ID=@CASE_FILE_ID

	
	--exec CMSWS_SP_GET_CMS_CASE_INFO @CASE_ID=3212238

	--exec CMSWS_SP_GET_CMS_ACTIVITIES_BY_CASE_ID @CASE_ID=3212238,@IS_INCLUDE_SUB_ACTIVITIES=1,@IS_INCLUDE_INACTIVE=1
	DECLARE
		@IS_INCLUDE_SUB_ACTIVITIES	BIT 			= 1,
		@IS_INCLUDE_INACTIVE		BIT 			= 1


			SELECT TOP 1
			@ACT_ID = a.ACT_ID,
			@VAR1 = a.CASE_ID,
			@VAR4 = a.ACT_NAME,
			@VAR5 = SPT.SUB_PROCESS_TEMPLATE_NAME
		FROM dbo.CMS_ACTIVITY a WITH (NOLOCK)
			INNER JOIN dbo.[CMS_ACTIVITY_TEMPLATE] atmpl (NOLOCK) ON a.ACT_TMPL_ID = atmpl.ACT_TMPL_ID
			INNER JOIN dbo.[CMS_MS_TEMPLATE_NEW] m (NOLOCK) ON atmpl.MS_ID = m.MS_ID
			LEFT JOIN dbo.[CMS_CASE_SUB_PROCESS] (NOLOCK) sp ON sp.CASE_SUB_PROCESS_ID = a.CASE_SUB_PROCESS_ID
			LEFT JOIN dbo.[CMS_SUBPROCESS_TEMPLATE] SPT (NOLOCK) ON sp.SUB_PROCESS_TEMPLATE_ID = SPT.SUB_PROCESS_TEMPLATE_ID
		WHERE
			a.CASE_ID = @CASE_ID
			AND ((@IS_INCLUDE_SUB_ACTIVITIES=1 AND (@IS_INCLUDE_INACTIVE=1 OR (sp.CASE_SUB_PROCESS_ID IS NULL ))) OR (sp.CASE_SUB_PROCESS_ID IS NULL))
			AND a.ACT_CMPL_DATE is NULL
		ORDER BY m.MS_SEQ_NUM

	-- get activity id

	--exec CMSWS_SP_UPDATE_MILESTONE_NEW @USERID=N&apos;6951&apos;,@USERNAME=N&apos;Andriy Ruslyakov&apos;,@CASE_ID=3212238,@SCHDL_CMPL_FLAG=1,@MILESTONE_TYPE_NAME=N&apos;Sale Bid Rcvd&apos;,@MILESTONE_DATE=N&apos;02/18/2020&apos;,@CLIENT_UPLOAD_ATTEMPT_DATE=NULL,@CLIENT_UPLOAD_SUCCESSFUL=NULL,@CLIENT_UPLOAD_COMPLETED_BY=NULL,@ACT_ID=66831625
			UPDATE dbo.CMS_ACTIVITY
					SET ACT_CMPL_DATE = @OWNDATE,
						ACT_CMPL_BY = @USERNAME
				WHERE ACT_ID = @act_id

			UPDATE dbo.CMS_ACTIVITY
				SET ACT_COUNTER = ACT_COUNTER+1,
					ACT_CHNG_FLAG = 1,
					ACT_SCHDL_DATE = @OWNDATE
				WHERE ACT_ID = @act_id


			


		INSERT INTO dbo.CMS_COMMENT(CMNT_TYPE_ID,CASE_ID,COMMENT_TEXT,COMMENT_USR_ID,COMMENT_USR_NAME,COMMENT_DATE,CASE_SUB_PROCESS_ID) 
		  VALUES(6,@CASE_ID,&apos;@COMMENTTEXT&apos;,@USERID,@USERNAME,GETUTCDATE(),1)


	-- run twice for next activity
			SELECT TOP 1
			@ACT_ID = a.ACT_ID,
			@VAR1 = a.CASE_ID,
			@VAR4 = a.ACT_NAME,
			@VAR5 = SPT.SUB_PROCESS_TEMPLATE_NAME
		FROM dbo.CMS_ACTIVITY a WITH (NOLOCK)
			INNER JOIN dbo.[CMS_ACTIVITY_TEMPLATE] atmpl (NOLOCK) ON a.ACT_TMPL_ID = atmpl.ACT_TMPL_ID
			INNER JOIN dbo.[CMS_MS_TEMPLATE_NEW] m (NOLOCK) ON atmpl.MS_ID = m.MS_ID
			LEFT JOIN dbo.[CMS_CASE_SUB_PROCESS] (NOLOCK) sp ON sp.CASE_SUB_PROCESS_ID = a.CASE_SUB_PROCESS_ID
			LEFT JOIN dbo.[CMS_SUBPROCESS_TEMPLATE] SPT (NOLOCK) ON sp.SUB_PROCESS_TEMPLATE_ID = SPT.SUB_PROCESS_TEMPLATE_ID
		WHERE
			a.CASE_ID = @CASE_ID
			AND ((@IS_INCLUDE_SUB_ACTIVITIES=1 AND (@IS_INCLUDE_INACTIVE=1 OR (sp.CASE_SUB_PROCESS_ID IS NULL ))) OR (sp.CASE_SUB_PROCESS_ID IS NULL))
			AND a.ACT_CMPL_DATE is NULL
		ORDER BY m.MS_SEQ_NUM

	-- get activity id

	--exec CMSWS_SP_UPDATE_MILESTONE_NEW @USERID=N&apos;6951&apos;,@USERNAME=N&apos;Andriy Ruslyakov&apos;,@CASE_ID=3212238,@SCHDL_CMPL_FLAG=1,@MILESTONE_TYPE_NAME=N&apos;Sale Bid Rcvd&apos;,@MILESTONE_DATE=N&apos;02/18/2020&apos;,@CLIENT_UPLOAD_ATTEMPT_DATE=NULL,@CLIENT_UPLOAD_SUCCESSFUL=NULL,@CLIENT_UPLOAD_COMPLETED_BY=NULL,@ACT_ID=66831625
			UPDATE dbo.CMS_ACTIVITY
					SET ACT_CMPL_DATE = @OWNDATE,
						ACT_CMPL_BY = @USERNAME
				WHERE ACT_ID = @act_id

			UPDATE dbo.CMS_ACTIVITY
				SET ACT_COUNTER = ACT_COUNTER+1,
					ACT_CHNG_FLAG = 1,
					ACT_SCHDL_DATE = @OWNDATE
				WHERE ACT_ID = @act_id


			


		INSERT INTO dbo.CMS_COMMENT(CMNT_TYPE_ID,CASE_ID,COMMENT_TEXT,COMMENT_USR_ID,COMMENT_USR_NAME,COMMENT_DATE,CASE_SUB_PROCESS_ID) 
		  VALUES(6,@CASE_ID,&apos;@COMMENTTEXT&apos;,@USERID,@USERNAME,GETUTCDATE(),1)

END
ELSE
	Print &apos;@CASE_ID is null&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">8</intProp>
          <stringProp name="Assertion.scope">all</stringProp>
          <stringProp name="Scope.variable">Result</stringProp>
        </ResponseAssertion>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="MS_SQL_TestCase#4" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LOOPS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${USERS_COUNT_TC4}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMP_UP}</stringProp>
        <longProp name="ThreadGroup.start_time">1370729701000</longProp>
        <longProp name="ThreadGroup.end_time">1370729701000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="MS_SQL_TestCase#4" enabled="true">
          <stringProp name="dataSource">pool</stringProp>
          <stringProp name="query">DECLARE 
	@CASE_FILE_ID NUMERIC(10) = 1073989,		
	@CASE_TYPE_ID NUMERIC(10),
	@CASE_TYPE_NAME NVARCHAR(MAX) = N&apos;Foreclosure&apos;,
	@CASE_TYPE_CODE NVARCHAR(MAX),
	@LOCATION_NAME NVARCHAR(MAX) = N&apos;Boca&apos;,
	@LOCATION_ID NUMERIC(10),
	@MSG NVARCHAR(MAX) = NULL,
	@BK_CHAPTER_NUM NVARCHAR(MAX) = NULL,
	@BK_CHAPTER_ID NUMERIC(10),
	@CASE_TMPL_ID NUMERIC(10) = 2313,--2771,
	@CASE_FILE_RECEIVED NVARCHAR(MAX) = N&apos;02/18/2020&apos;,
	@CASE_STARTED NVARCHAR(MAX) = N&apos;02/18/2020&apos;,
	@CASE_WHO_HAS NVARCHAR(MAX) = N&apos;Andriy Ruslyakov&apos;,
	@CASE_NUMBER NVARCHAR(MAX) =&apos;FC02&apos;,
	@CASE_ID NUMERIC(10),-- = 1434057,
	@USERID NVARCHAR(MAX) = N&apos;6951&apos;,
	@USERNAME NVARCHAR(MAX) = N&apos;Andriy Ruslyakov&apos;,
	@BK_ID NUMERIC(10),
	@QUOTE_ID NUMERIC(10),
	@HISTORY_IDS NVARCHAR(MAX),
	@DEFICIENCY_REASON_ID NUMERIC(10),
	@DEFICIENCY_REASON_NAME NVARCHAR(MAX) = NULL,
	@APPEARANCE_TYPE_ID NUMERIC(10),
	@APPEARANCE_TYPE_NAME NVARCHAR(MAX) = NULL,
	@CONSENT_TYPE_ID NUMERIC(10),
	@CONSENT_TYPE_NAME NVARCHAR(MAX) = NULL,
	@D_OCCUPANCY NVARCHAR(MAX) =0,
	@D_NOTICE_SENT_STAT NVARCHAR(MAX) = 0,
	@CONTACT_REF NVARCHAR(MAX) = &apos;Trump Inc&apos;,
	@CONTACT_ID NUMERIC(10) = 4276114,-- 5712984,
	@TEMP_CONTACT_ID numeric(10),
	@ACTOR_INACTIVE NVARCHAR(MAX)=0,
	@NEW_ACTOR_ID numeric(10),
	@NEW_CONTACT_ID numeric(10),
	@ACTOR_ID numeric(10),
	@D_DEFICIENCY_PRESERVED NVARCHAR(MAX) = NULL,
	@D_DEFICIENCY_SOUGHT NVARCHAR(MAX) = NULL,
	@D_SERVICE_CODE NVARCHAR(MAX) = NULL,
	@D_APPEAR_DATE NVARCHAR(MAX) = NULL,
	@D_CONSENT_REQUESTED NVARCHAR(MAX) = NULL, 
	@D_CONSENT_RECEIVED NVARCHAR(MAX) = NULL, 
	@D_DEFAULT_NOTICE_SENT NVARCHAR(MAX) = NULL, 
	@D_DEFAULT_EXPIRED NVARCHAR(MAX) =NULL,
	@D_DEFAULT_ORDERED NVARCHAR(MAX) = NULL, 
	@D_ORDER_SENT NVARCHAR(MAX) = NULL, 
	@D_COURT_FILE_CHECK NVARCHAR(MAX) = NULL,
	@D_DEFAULT_ORD_ENT NVARCHAR(MAX) =NULL,
	@D_DUE_DILIGENCE_AFF_NEEDED NVARCHAR(MAX)=NULL,
	@D_DUE_DILIGENCE_AFF_RECEIVED NVARCHAR(MAX)=NULL,
	@D_DUE_DILIGENCE_AFF_FILED NVARCHAR(MAX)=NULL,
	@D_SEQ_NUMB NVARCHAR(MAX)=1,
	@D_PLEADING_DATE NVARCHAR(MAX)=NULL,
	@PRIOR_ACTOR_ID numeric(10),
	@NEW_ADDRESS_ID numeric(10),
	@STATE_ID NUMERIC(10), 
	@COUNTY_NAME NVARCHAR(MAX) = N&apos;Washington&apos;, 
	@COUNTY_ID NUMERIC(10),
	@STATE_CODE NVARCHAR(20) = N&apos;FL&apos;,
	@CNTR_ID numeric(10),
	@COUNTRY_NAME NVARCHAR(MAX) = N&apos;United States&apos;,
	@ADDRESS_1_LINE NVARCHAR(MAX) = N&apos;Main street 1&apos;, 
	@ADDRESS_2_LINE NVARCHAR(MAX),
	@ADDRESS_TEXT NVARCHAR(MAX),
	@ADDRESS_LINE_ATTN NVARCHAR(MAX),
	@ADDRESS_CITY NVARCHAR(MAX) = N&apos;Schdy&apos;, 
	@ADDRESS_ZIPCODE NVARCHAR(MAX) = N&apos;12345&apos;,
	@ADDRESS_IS_PRIM NVARCHAR(MAX) = 0,
	@ADDRESS_ID numeric(10),
	@CONT_TYPE_ID NUMERIC(10),
	@CONT_TYPE_CASE_FILE NVARCHAR(MAX),
	@COMP_FIELD_SNGL NVARCHAR(MAX),
	@CONT_TYPE_NAME NVARCHAR(MAX) = N&apos;Title Company&apos;

-- set initial param values
SELECT top 1 @CASE_FILE_ID = CASE_FILE_ID  FROM dbo.CMS_case_file --where case_file_id = 1073989
order by rand(CHECKSUM(NEWID()));
print(&apos;@CASE_FILE_ID = &apos; + cast(@CASE_FILE_ID as varchar(20)))

select top 1 @CASE_TYPE_NAME = CASE_TYPE_NAME from dbo.CMS_CASE_TYPE
order by rand(CHECKSUM(NEWID()));
print (&apos;@CASE_TYPE_NAME = &apos; + @CASE_TYPE_NAME)

-- CMSWFWS_SP_CREATE_CASE_ACTION
SELECT @CASE_TYPE_ID=CASE_TYPE_ID,
		@CASE_TYPE_CODE=CASE_TYPE_CODE 
	FROM dbo.CMS_CASE_TYPE (NOLOCK) WHERE CASE_TYPE_NAME=@CASE_TYPE_NAME

SELECT top 1 @CASE_TMPL_ID = [CASE_TMPL_ID] FROM[dbo].[CMS_CASE_TEMPLATE] 
where CASE_TYPE_ID = @CASE_TYPE_ID
  order by rand(CHECKSUM(NEWID()))
print(&apos;@CASE_TMPL_ID = &apos; + cast(@CASE_TMPL_ID as varchar(20)))

		SELECT @CASE_NUMBER = CAST(COUNT(1)+1 AS VARCHAR(3)) FROM dbo.CMS_CASE_FILE CF (NOLOCK)
		JOIN dbo.CMS_CASE C (NOLOCK) ON CF.CASE_FILE_ID=C.CASE_FILE_ID
		WHERE CF.CASE_FILE_ID=@CASE_FILE_ID AND C.CASE_TYPE_ID=@CASE_TYPE_ID
		-- pad left 0 for # under 10 (eg 01, 02)
		IF LEN(@CASE_NUMBER) = 1
			SET @CASE_NUMBER = &apos;0&apos;+@CASE_NUMBER
		-- and prefix with the type (eg fc, bk)
		SET @CASE_NUMBER = @CASE_TYPE_CODE+@CASE_NUMBER

	print (&apos;@CASE_NUMBER = &apos; + @CASE_NUMBER)

		-- CREATE THE ACTION AND GET ITS ID FOR OTHER INSERTS/AUDIT
		INSERT INTO CMS_CASE
		(
			CASE_FILE_ID,
			CASE_TYPE_ID,
			LOCATION_ID,
			BK_CHAPTER_ID,
			CASE_TMPL_ID,
			CASE_FILE_RECEIVED,
			CASE_STARTED,
			CASE_WHO_HAS,
			CASE_NUMBER
			--CORE_PROCESS_NAME
		)
		VALUES
		(
			@CASE_FILE_ID,
			@CASE_TYPE_ID,
			@LOCATION_ID,
			@BK_CHAPTER_ID,
			@CASE_TMPL_ID,
			@CASE_FILE_RECEIVED,
			@CASE_STARTED,
			@CASE_WHO_HAS,
			@CASE_NUMBER
			--@CORE_PROCESS_NAME
		)

		SET @CASE_ID = SCOPE_IDENTITY()

		print &apos;CASE inserted: &apos; + cast(@CASE_ID as varchar(20))

		-- CREATE THE CASE STATUS ROW (NOT AUDITED) - TRIGGER HANDLES SETTING CASE_STAT_CUR_STAT ETC
		INSERT INTO dbo.CMS_CASE_STATUS (STATUS_ID, CASE_ID, CASE_STAT_USR_ID, CASE_STAT_USR_NAME)
		VALUES (1, @CASE_ID, @USERID, @USERNAME)

		print &apos;CASE STATUS inserted: &apos; + cast(@CASE_ID as varchar(20))

		-- CREATE THE BK ROW AND AUDIT THAT
		INSERT INTO dbo.CMS_BANKRUPTCY (CASE_ID) VALUES (@CASE_ID)
		SET @BK_ID = SCOPE_IDENTITY()

		print &apos;BANKRUPTCY inserted: &apos; + cast(@BK_ID as varchar(20))

		-- CREATE EMPTY TAGGED REFERRAL QUOTE AND AUDIT THAT
		-- complex type 312 = referral quote
		INSERT INTO dbo.CMS_QUOTE (CASE_ID, QUOTE_TYPE_ID, QUOTE_IS_TAGGED) VALUES (@CASE_ID, 8, 1)
		SET @QUOTE_ID = SCOPE_IDENTITY()

		print &apos;QUOTE inserted: &apos; + cast(@QUOTE_ID as varchar(20))
		-- CALL CMS SP TO MAKE MILESTONES
		--EXEC dbo.CMS_P_CREATE_ACTIVITY_BY_TEMPLATE @CASE_ID, @USERID, @USERNAME, @HISTORY_IDS OUT

    DECLARE @cmpl_date datetime
    DECLARE @act_schdl_date datetime
    DECLARE @act_id NUMBERID

    SELECT @case_file_received = c.CASE_FILE_RECEIVED,
        @case_tmpl_id = c.CASE_TMPL_ID
    FROM dbo.CMS_CASE c (NOLOCK)
    WHERE c.CASE_ID = @case_id

    /* Insert all Activities    */
    INSERT INTO dbo.CMS_ACTIVITY (
		CASE_ID,
		ACT_NAME,
		ACT_ACTIV_ID,
		ACT_SEQ,
		ACT_TMPL_ID,
		USER_GROUP_ID
	)
    SELECT 	@case_id,
			a.BF_ACTIVITY_NAME,
            a.BF_ACT_ID,
			a.ACT_TMPL_SEQ_NUM,
			a.ACT_TMPL_ID,
			mtn.USER_GROUP_ID
    FROM dbo.CMS_ACTIVITY_TEMPLATE a (NOLOCK)
		JOIN dbo.CMS_MS_TEMPLATE_NEW (NOLOCK) mtn ON a.MS_ID = mtn.MS_ID
    WHERE a.CASE_TMPL_ID = @case_tmpl_id --a.BF_PROC_DEF_ID = @proc_def_id
    ORDER BY a.ACT_TMPL_SEQ_NUM asc

	print &apos;ACTIVITY inserted: &apos; + cast(@case_id as varchar(20))

    SET @cmpl_date = getutcdate()

    /* Schedule first activity */
             SELECT @act_schdl_date = dbo.CMS_F_GET_DATE_ONLY(ISNULL(@case_file_received,getutcdate())),
            @act_id = ACT_ID FROM dbo.CMS_ACTIVITY (NOLOCK) WHERE CASE_ID = @case_id AND ACT_ACTIV_ID = &apos;000&apos;

            --insert new comment on recalculating scheduled date in milestone (bug AP300001958)   
    --EXEC CMS_P_COMMENT_INSERT 6,@case_id,null,@USERID,@USERNAME,@act_schdl_date,&apos;000&apos;,@act_id,&apos;SCH - &apos;,1,1
	    INSERT INTO dbo.CMS_COMMENT(CMNT_TYPE_ID,CASE_ID,COMMENT_TEXT,COMMENT_USR_ID,COMMENT_USR_NAME,COMMENT_DATE) 
      VALUES(6,@CASE_ID,&apos;Comment&apos;,@USERID,@USERNAME,GETUTCDATE())

    UPDATE dbo.CMS_ACTIVITY
    SET ACT_SCHDL_DATE = @act_schdl_date
    WHERE CASE_ID = @case_id
    AND ACT_ACTIV_ID = &apos;000&apos;

-- CMSWS_SP_INSERT_DEFENDANT_NEW
		SELECT @DEFICIENCY_REASON_ID = DEFICIENCY_REASON_ID FROM dbo.CMS_DEFENDANT_DEFICIENCY_REASON (NOLOCK)
			WHERE DEFICIENCY_REASON_NAME=@DEFICIENCY_REASON_NAME

		SELECT @APPEARANCE_TYPE_ID = APPEARANCE_TYPE_ID FROM dbo.CMS_DEFENDANT_APPEARANCE_TYPE (NOLOCK)
			WHERE APPEARANCE_TYPE_NAME=@APPEARANCE_TYPE_NAME

		SELECT @CONSENT_TYPE_ID = CONSENT_TYPE_ID FROM dbo.CMS_DEFENDANT_CONSENT_TYPE (NOLOCK)
			WHERE CONSENT_TYPE_NAME=@CONSENT_TYPE_NAME

		SET @TEMP_CONTACT_ID = @CONTACT_ID
		--print &apos;contact_id = &apos; + cast(@CONTACT_ID as varchar(20))

---- CMSWS_SP_INSERT_CASE_CONTACT_ACTOR
	SET @NEW_ACTOR_ID = 0

--		-- WE NEED THESE FOR INSERT/CHECKS
		SELECT @CONT_TYPE_ID = CT.CONT_TYPE_ID, 
				@CONT_TYPE_CASE_FILE=CT.CONT_TYPE_CASE_FILE,
				@COMP_FIELD_SNGL = CMPLX.COMP_FIELD_SNGL 
			FROM dbo.CMS_CONTACT_TYPE CT (NOLOCK)
				LEFT OUTER JOIN dbo.CMS_COMPLEX_FIELD CMPLX (NOLOCK) ON CT.CONT_TYPE_ID=CMPLX.CONT_TYPE_ID
			WHERE CONT_TYPE_NAME=@CONT_TYPE_NAME

 		-- ACTOR DOES NOT GET CASE ID ENTERED FOR CASE FILE LEVEL CONTACTS
		DECLARE @CASE_ID_VAR NUMERIC (10,0)  -- NULL DEFAULT
		IF @CONT_TYPE_CASE_FILE=0
		BEGIN
			SET @CASE_ID_VAR = @CASE_ID
		END

		IF EXISTS (SELECT 1 FROM [dbo].[CMS_ACTOR] (NOLOCK) WHERE [CASE_ID] = @CASE_ID AND [CONTACT_ID] = @CONTACT_ID 
			AND [CASE_FILE_ID] = @CASE_FILE_ID)
			BEGIN
				 delete from [dbo].[CMS_ACTOR]  WHERE [CASE_ID] = @CASE_ID AND [CONTACT_ID] = @CONTACT_ID 
				AND [CASE_FILE_ID] = @CASE_FILE_ID
			END

		INSERT INTO dbo.CMS_ACTOR
		(
			CASE_FILE_ID,
			CONT_TYPE_ID,
			CASE_ID,
			CONTACT_ID,
			ACTOR_INACTIVE
		)
		VALUES
		(
			@CASE_FILE_ID,
			@CONT_TYPE_ID,
			@CASE_ID_VAR,  -- CASE_ID OR NULL AS APPROPRIATE SEE ABOVE
			@CONTACT_ID,
			@ACTOR_INACTIVE
		)

		SET @ACTOR_ID = SCOPE_IDENTITY()

		print &apos;ACTOR inserted: id = &apos; + cast(@ACTOR_ID as varchar(20))

		SET @NEW_CONTACT_ID=@CONTACT_ID

		-- now we have to create the specialized defendant fields with the newly created actor
		SELECT @ACTOR_ID=ACTOR_ID FROM CMS_ACTOR (NOLOCK) WHERE CASE_ID=@CASE_ID AND CONTACT_ID=@CONTACT_ID
		--AND CONT_TYPE_ID=57
		SET @NEW_ACTOR_ID=@ACTOR_ID


		INSERT INTO dbo.CMS_DEFENDANT 
		(
			ACTOR_ID,
			D_OCCUPANCY,
			D_DEFICIENCY_PRESERVED,
			D_DEFICIENCY_SOUGHT,
			DEFICIENCY_REASON_ID,
			D_SERVICE_CODE,
			D_APPEAR_DATE,
			APPEARANCE_TYPE_ID,
			D_CONSENT_REQUESTED,
			D_CONSENT_RECEIVED,
			CONSENT_TYPE_ID,
			D_NOTICE_SENT_STAT,
			D_DEFAULT_NOTICE_SENT,		
			D_DEFAULT_EXPIRED,
			D_DEFAULT_ORDERED,
			D_ORDER_SENT,
			D_COURT_FILE_CHECK,
			D_DEFAULT_ORD_ENT,
			D_DUE_DILIGENCE_AFF_NEEDED,
			D_DUE_DILIGENCE_AFF_RECEIVED,
			D_DUE_DILIGENCE_AFF_FILED,
			D_PLEADING_DATE,
			DEF_SEQ_NUMB
		)
		VALUES
		(
			@ACTOR_ID,
			@D_OCCUPANCY,
			@D_DEFICIENCY_PRESERVED,
			@D_DEFICIENCY_SOUGHT,
			@DEFICIENCY_REASON_ID,
			@D_SERVICE_CODE,
			@D_APPEAR_DATE,
			@APPEARANCE_TYPE_ID,
			@D_CONSENT_REQUESTED,
			@D_CONSENT_RECEIVED,
			@CONSENT_TYPE_ID,
			@D_NOTICE_SENT_STAT,
			@D_DEFAULT_NOTICE_SENT,		
			@D_DEFAULT_EXPIRED,
			@D_DEFAULT_ORDERED,
			@D_ORDER_SENT,
			@D_COURT_FILE_CHECK,
			@D_DEFAULT_ORD_ENT,
			@D_DUE_DILIGENCE_AFF_NEEDED,
			@D_DUE_DILIGENCE_AFF_RECEIVED,
			@D_DUE_DILIGENCE_AFF_FILED,
			@D_PLEADING_DATE,
			@D_SEQ_NUMB
		)

		print &apos;DEFENDANT inserted: case_id = &apos; + cast(@CASE_ID as varchar(20))

---- CMSWS_SP_INSERT_CASE_CONTACT_ADDRESS
SET @NEW_ADDRESS_ID = 0
		SELECT @STATE_ID = STATE_ID FROM dbo.CMS_STATE (NOLOCK)
			WHERE STATE_CODE=@STATE_CODE

		SELECT @COUNTY_ID = COUNTY_ID FROM dbo.CMS_COUNTY (NOLOCK)
			WHERE COUNTY_NAME=@COUNTY_NAME AND STATE_ID=@STATE_ID

		SELECT @CNTR_ID = CNTR_ID FROM dbo.CMS_COUNTRY (NOLOCK)
			WHERE CNTR_NAME=@COUNTRY_NAME

		INSERT INTO dbo.CMS_ADDRESS
		(
			ADDR_TYPE_ID,
			CONTACT_ID,
			STATE_ID,
			COUNTY_ID,
			ADDRESS_1_LINE,
			ADDRESS_2_LINE,
			ADDRESS_CITY,
			ADDRESS_ZIPCODE,
			ADDRESS_IS_PRIM,
			ADDRESS_TEXT,
			CNTR_ID,
			ADDRESS_LINE_ATTN
		)
		VALUES
		(
			1,  -- CONTACT
			@CONTACT_ID,
			@STATE_ID,
			@COUNTY_ID,
			@ADDRESS_1_LINE,
			@ADDRESS_2_LINE,
			@ADDRESS_CITY,
			@ADDRESS_ZIPCODE,
			@ADDRESS_IS_PRIM,
			@ADDRESS_TEXT,
			@CNTR_ID,
			@ADDRESS_LINE_ATTN
		)

		-- NEED THE ID THAT WAS INSERTED FOR AUDIT
		SET @ADDRESS_ID = SCOPE_IDENTITY()

		print &apos;ADDRESS inserted: id = &apos; + cast(@ADDRESS_ID as varchar(20))</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">8</intProp>
          <stringProp name="Assertion.scope">all</stringProp>
          <stringProp name="Scope.variable">Result</stringProp>
        </ResponseAssertion>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
